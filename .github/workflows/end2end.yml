name: End-to-End tests

on: [pull_request]

jobs:
  end2end-test:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        app:
          - { name: django-mysql, testfile: end2end/django_mysql_test.py }
          - { name: django-mysql-gunicorn, testfile: end2end/django_mysql_gunicorn_test.py }
          - { name: django-postgres-gunicorn, testfile: end2end/django_postgres_gunicorn_test.py }
          - { name: flask-mongo, testfile: end2end/flask_mongo_test.py }
          - { name: flask-mysql, testfile: end2end/flask_mysql_test.py }
          - { name: flask-mysql-uwsgi, testfile: end2end/flask_mysql_uwsgi_test.py }
          - { name: flask-postgres, testfile: end2end/flask_postgres_test.py }
          - { name: flask-postgres-xml, testfile: end2end/flask_postgres_xml_test.py }
          - { name: flask-postgres-xml, testfile: end2end/flask_postgres_xml_lxml_test.py }
          - { name: quart-postgres-uvicorn, testfile: end2end/quart_postgres_uvicorn_test.py }
          - { name: starlette-postgres-uvicorn, testfile: end2end/starlette_postgres_uvicorn_test.py }
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start databases
        working-directory: ./sample-apps/databases
        run: docker compose up --build -d
      - name: Build and start aikido mock server
        working-directory: ./end2end/server
        run: docker build -t mock-core . && docker run --name mock_core -d -p 5000:5000 mock-core

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install
      - name: Start application
        working-directory: ./sample-apps/${{ matrix.app.name }}
        run: |
          docker compose -f docker-compose.yml -f docker-compose.benchmark.yml up --build -d
      - name: Run end2end tests for application
        run: sleep 5 && poetry run pytest ./${{ matrix.app.testfile }}
