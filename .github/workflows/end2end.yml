name: End-to-End tests

on: [pull_request]

jobs:
  end2end-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - { name: "django-mysql", test_file: "django_mysql_test.py" }
          - { name: "django-mysql-gunicorn", test_file: "django_mysql_gunicorn_test.py" }
          - { name: "django-postgres-gunicorn", test_file: "django_postgres_gunicorn_test.py" }
          - { name: "flask-mongo", test_file: "flask_mongo_test.py" }
          - { name: "flask-mysql", test_file: "flask_mysql_test.py" }
          - { name: "flask-mysql-uwsgi", test_file: "flask_mysql_uwsgi_test.py" }
          - { name: "flask-postgres", test_file: "flask_postgres_test.py" }
          - { name: "flask-postgres-xml", test_file: "flask_postgres_xml_test.py" }
          - { name: "flask-postgres-xml", test_file: "flask_postgres_xml_lxml_test.py" }
          - { name: "quart-postgres-uvicorn", test_file: "quart_postgres_uvicorn_test.py" }
          - { name: "starlette-postgres-uvicorn", test_file: "starlette_postgres_uvicorn_test.py" }
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
  
    - name: Start databases
      working-directory:  ./sample-apps/databases
      run: docker compose up --build -d
    - name: Build and start aikido mock server
      working-directory: ./end2end/server
      run: docker build -t mock-core . && docker run --name mock_core -d -p 5000:5000 mock-core

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install

    - name: Start application
      working-directory: ./sample-apps/${{ matrix.app.name }}
      run: |
        docker compose -f docker-compose.yml -f docker-compose.benchmark.yml up --build -d

    - name: Run end2end tests
      working-directory: ./sample-apps/${{ matrix.app.name }}
      run: |
        sleep 5 && docker-compose logs -f & cd ../../
        poetry run pytest ./end2end/${{ matrix.app.test_file }}
