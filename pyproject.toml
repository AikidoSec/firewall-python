[tool.poetry]
name = "aikido_firewall"
version = "0.1.19"
description = "Aikido Zen for Python"
authors = ["Aikido Security <help@aikido.dev>"]
readme = "README.md"
license = "AGPL-3.0-or-later"
include = ["docs/*"]
keywords = [
    "web application firewall",
    "WAF",
    "cybersecurity",
    "security",
    "firewall",
    "web security",
    "application security",
    "threat detection",
    "intrusion prevention",
    "DDoS protection",
    "malware protection",
    "Python",
    "Python 3",
    "network security",
    "data protection",
    "secure coding",
    "vulnerability management",
    "API security",
    "SSL/TLS",
    "penetration testing",
]

classifiers = [
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Security",
]
homepage = "https://www.aikido.dev/runtime/firewall/"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/AikidoSec/firewall-python/issues"
"Source" = "https://github.com/AikidoSec/firewall-python"
"Homepage" = "https://www.aikido.dev/runtime/firewall"
"Bug Bounty" = "https://app.intigriti.com/programs/aikido"

[tool.poetry.dependencies]
python = "^3.8"
importhook = "^1.0.9"
python-dotenv = "^1.0.1"
regex = "^2024.5.15"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
pylint = "^3.2.5"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
